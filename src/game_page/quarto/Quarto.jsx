/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect, Suspense } from "react";
import { useGLTF, CameraControls, Environment } from "@react-three/drei";
import { a } from '@react-spring/three';
import { Canvas } from "@react-three/fiber";

import quartoScene from './quarto.glb';
import Grid from "./Grid";
import Piece from "./Piece";
import { Loader, Notification } from "../index";

function getWindowSize() {
    const {innerWidth, innerHeight} = window;
    return {innerWidth, innerHeight};
}

const Quarto = (props) => {
    const [windowSize, setWindowSize] = useState(getWindowSize());

    useEffect(() => {
        function handleWindowResize() {
            setWindowSize(getWindowSize());
        }
    
        window.addEventListener('resize', handleWindowResize);
    
        return () => {
            window.removeEventListener('resize', handleWindowResize);
        };
    }, []);

    const adjustBoardForScreenSize = () => {
        let screenScale = null;
        let screenPosition = [0, 0, 0];
        let rotation = [0, 0, 0];

        if(windowSize.innerWidth < 768) {
            screenScale = [4.5, 4.5, 4.5];
            screenPosition = [0, 0, 0];
        } else {
            screenScale = [6, 6, 6];
            screenPosition = [0, 0, 0];
        }

        return [screenScale, screenPosition, rotation];
    }

    const quartoRef = useRef();
    const { nodes, materials } = useGLTF(quartoScene);
    const [boardScale, boardPosition, boardRotation] = adjustBoardForScreenSize();
    const [step, setStep] = useState(1);
    const [player, setPlayer] = useState(1);
    const gridPositions = [
        {position: [-0.209, 0.021, -0.208]},
        {position: [-0.07, 0.021, -0.208]},
        {position: [0.069, 0.021, -0.208]}, 
        {position: [0.208, 0.021, -0.208]}, 
        {position: [-0.209, 0.021, -0.069]}, 
        {position: [-0.07, 0.021, -0.069]}, 
        {position: [0.069, 0.021, -0.069]}, 
        {position: [0.208, 0.021, -0.069]}, 
        {position: [-0.209, 0.021, 0.071]}, 
        {position: [-0.07, 0.021, 0.071]}, 
        {position: [0.069, 0.021, 0.071]}, 
        {position: [0.208, 0.021, 0.071]}, 
        {position: [-0.209, 0.021, 0.211]}, 
        {position: [-0.07, 0.021, 0.211]}, 
        {position: [0.069, 0.021, 0.211]}, 
        {position: [0.208, 0.021, 0.211]}, 
    ];
    const piecesInfo = [
        {   
            geometry: nodes.Object_12.geometry,
            material: materials.Wood_procedural_lighter,
            position: [-0.209, 0.045, -0.508],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        }, 
        {
            geometry: nodes.Object_14.geometry,
            material: materials.Wood_procedural,
            position: [-0.069, 0.045, -0.508],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        }, 
        {
            geometry: nodes.Object_16.geometry,
            material: materials.Wood_procedural_lighter,
            position: [0.069, 0.045, -0.508],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        }, 
        {
            geometry: nodes.Object_18.geometry,
            material: materials.Wood_procedural,
            position: [0.208, 0.045, -0.508],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        }, 
        {
            geometry: nodes.Object_20.geometry,
            material: materials.Wood_procedural_lighter,
            position: [0.507, 0.045, -0.208],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        },  
        {
            geometry: nodes.Object_22.geometry,
            material: materials.Wood_procedural_lighter,
            position: [-0.509, 0.045, -0.067],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        },  
        {
            geometry: nodes.Object_24.geometry,
            material: materials.Wood_procedural,
            position: [0.507, 0.045, -0.067],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        }, 
        {
            geometry: nodes.Object_26.geometry,
            material: materials.Wood_procedural,
            position: [-0.509, 0.045, -0.208],
            rotation: [-Math.PI, 0, 0],
            scale: [-0.028, 0.028, 0.028],
        }, 
        {
            geometry: nodes.Object_28.geometry,
            material: materials.Wood_procedural_lighter,
            position: [-0.509, 0.046, 0.071],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        },  
        {
            geometry: nodes.Object_30.geometry,
            material: materials.Wood_procedural,
            position: [-0.509, 0.046, 0.211],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        },  
        {
            geometry: nodes.Object_32.geometry,
            material: materials.Wood_procedural_lighter,
            position: [0.508, 0.046, 0.211],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        }, 
        {
            geometry: nodes.Object_34.geometry,
            material: materials.Wood_procedural,
            position: [0.508, 0.046, 0.071],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        }, 
        {
            geometry: nodes.Object_36.geometry,
            material: materials.Wood_procedural_lighter,
            position: [-0.209, 0.046, 0.511],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        },  
        {
            geometry: nodes.Object_38.geometry,
            material: materials.Wood_procedural,
            position: [-0.07, 0.046, 0.511],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        },  
        {
            geometry: nodes.Object_40.geometry,
            material: materials.Wood_procedural_lighter,
            position: [0.068, 0.046, 0.511],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        }, 
        {
            geometry: nodes.Object_42.geometry,
            material: materials.Wood_procedural,
            position: [0.208, 0.046, 0.511],
            rotation: [0, 0, 0],
            scale: [0.029, 0.029, 0.029],
        }, 
    ];

    return (
        <section className="w-full h-screen">
            <div className="w-full fixed flex flex-col items-center self-center bottom-0 pb-8 z-10">
                <Notification text="Player 1's turn: Pick a piece"/>
            </div>
            <Canvas className="w-full h-screen bg-transparent relative">
                <Suspense fallback={<Loader />}>
                <CameraControls  
                    minDistance={3} maxDistance={10}
                    minPolarAngle={0} maxPolarAngle={1.5}
                />
                    <directionalLight position={[-1, 2, -3]} intensity={1} />
                    <ambientLight intensity={2} />
                    <a.group {...props} 
                        ref={quartoRef} 
                        scale={boardScale}
                        position={boardPosition}
                        rotation={boardRotation}
                    >
                        <mesh
                            geometry={nodes.Object_4.geometry}
                            material={materials.Wood_procedural_Table}
                            onPointerEnter={(e) => {
                                piecesInfo[1].position = [-0.209, 0.021, -0.208];
                            }}
                        />
                        <mesh
                            geometry={nodes.Object_6.geometry}
                            material={materials.Smooth_Gold}
                            position={[0, -0.003, 0]}
                        />
                        {gridPositions.map((position) => (
                            <Grid {...position} materials={materials} step={step}/>
                        ))}
                        {piecesInfo.map((data) => (
                            <Piece {...data} step={step} />
                        ))}
                    </a.group>
                    <Environment preset="dawn" background blur={1} />
                </Suspense>
            </Canvas>
        </section>
    );
}

export default Quarto;